import 'byte.grm' as bytelib;
import 'arpabet.grm' as arpabet;
Sigma = bytelib.kGraph | bytelib.kSpace;
arpa = SymbolTable['arpabet.sym'];
arpaSigma = arpabet.Phoneme;

export Pronounce = StringFile['../data/cmudict.txt', byte, arpa];

export StressPattern = CDRewrite[((arpabet.Consonant:"".arpa) | (arpabet.Stressed:"AA1".arpa) | (arpabet.Unstressed:"AA0".arpa))*, "".arpa, "".arpa, arpaSigma*, 'sim', 'obl'];

Byte = (("".arpa : "") | ("AA1".arpa:"1") | ("AA0".arpa:"0"))*;
Dacytl = ("1" "0" "0");  

export Results = Optimize[Project[Pronounce @ StressPattern @ Byte @ (Dacytl*),'input']];
export ListResults = "" : Results;
